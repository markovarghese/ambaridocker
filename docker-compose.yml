version: '3.5'
services:
  ambariserver:
    container_name: ambariserver
    image: marko/ambariserver
    hostname: ambariserver
    build:
      context: ./ambariserver
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
#    volumes:
#     - "./ambariserver/conf:/tmp"
    depends_on:
      - mariadb_server
  ambariagent1:
    container_name: ambariagent1
    image: marko/ambariagent
    hostname: ambariagent1
    build:
      context: ./ambariagent
      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    volumes:
#     - "./ambariserver/conf:/tmp"
    depends_on:
      - mariadb_server
      - ambariserver
  ambariagent2:
    container_name: ambariagent2
    image: marko/ambariagent
    hostname: ambariagent2
    build:
      context: ./ambariagent
      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    volumes:
#     - "./ambariserver/conf:/tmp"
    depends_on:
      - mariadb_server
      - ambariserver
  ambariagent3:
    container_name: ambariagent3
    image: marko/ambariagent
    hostname: ambariagent3
    build:
      context: ./ambariagent
      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    volumes:
#     - "./ambariserver/conf:/tmp"
    depends_on:
      - mariadb_server
      - ambariserver
  mariadb_server:
    container_name: mariadb_server
    image: mariadb:latest
    hostname: mariadb_server
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=simple123
    volumes:
     - "data-mysql:/var/lib/mysql"
     - "./mysql/init:/docker-entrypoint-initdb.d"

# [ volumes definition ]
#
# creates Docker volumes which can be mounted by other containers too e.g. for backup
#
volumes:
  data-mysql:
    driver: local